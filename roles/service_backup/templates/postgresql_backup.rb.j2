# encoding: utf-8

##
# Backup Generated: postgresql_backup
# Once configured, you can run the backup with the following command:
#
# $ backup perform -t postgresql_backup [-c <path_to_configuration_file>]
#
Backup::Model.new(:postgresql_backup, 'PostgreSQL {{ app_environment }} Instance {{ app_instance_id }} Backup') do
  ##
  # Split [Splitter]
  #
  # Split the backup file in to chunks of 250 megabytes
  # if the backup file size exceeds 250 megabytes
  #
  split_into_chunks_of 250

  ##
  # PostgreSQL [Database]
  #
  database PostgreSQL do |db|
    # To dump all databases, set `db.name = :all` (or leave blank)
    # db.name               = "my_database_name"
    db.username           = "{{ app_db_username }}"
    db.password           = "{{ app_db_password }}"
    db.host               = "localhost"
    db.port               = {{ app_db_port }}
    # db.socket             = "/tmp/pg.sock"
    # When dumping all databases, `skip_tables` and `only_tables` are ignored.
    # db.skip_tables        = ["skip", "these", "tables"]
    # db.only_tables        = ["only", "these", "tables"]
    # db.additional_options = [] # default database specific encoding
  end

  ##
  # Amazon Simple Storage Service [Storage]
  #
  # Available Regions:
  #
  #  - ap-northeast-1
  #  - ap-southeast-1
  #  - eu-west-1
  #  - us-east-1
  #  - us-west-1
  #
  store_with S3 do |s3|
    s3.access_key_id     = "{{ app_iam_access_key_id }}"
    s3.secret_access_key = "{{ app_iam_secret_access_key }}"
    s3.region            = "us-west-2"
    s3.bucket            = "gridkick-{{ app_environment }}-backups"
    s3.path              = "/{{ app_user_id }}/{{ app_instance_id }}"
    s3.keep              = 100
  end

  ##
  # Gzip [Compressor]
  #
  compress_with Gzip

  ##
  # Mail [Notifier]
  #
  # The default delivery method for Mail Notifiers is 'SMTP'.
  # See the Wiki for other delivery options.
  # https://github.com/meskyanichi/backup/wiki/Notifiers
  #
  notify_by Mail do |mail|
    mail.on_success     = false
    mail.on_warning     = true
    mail.on_failure     = true

    mail.from           = "backups@ad.venture.io"
    mail.to             = "notifications@ad.venture.io"
    mail.address        = "smtp.mandrillapp.com"
    mail.port           = 587
    mail.domain         = "ad.venture.io"
    mail.user_name      = "{{ backup_notifier_mail_user_name }}"
    mail.password       = "{{ backup_notifier_mail_password }}"
    mail.authentication = "login"
    mail.encryption     = :starttls
  end
end
